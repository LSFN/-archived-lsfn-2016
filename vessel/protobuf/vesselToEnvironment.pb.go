// Code generated by protoc-gen-go.
// source: vesselToEnvironment.proto
// DO NOT EDIT!

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type JoinRequest struct {
	VesselID string `protobuf:"bytes,1,opt,name=vesselID" json:"vesselID,omitempty"`
}

func (m *JoinRequest) Reset()                    { *m = JoinRequest{} }
func (m *JoinRequest) String() string            { return proto.CompactTextString(m) }
func (*JoinRequest) ProtoMessage()               {}
func (*JoinRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type VesselToEnvironment struct {
	ProtocolVersion string       `protobuf:"bytes,1,opt,name=protocolVersion" json:"protocolVersion,omitempty"`
	JoinRequest     *JoinRequest `protobuf:"bytes,2,opt,name=joinRequest" json:"joinRequest,omitempty"`
}

func (m *VesselToEnvironment) Reset()                    { *m = VesselToEnvironment{} }
func (m *VesselToEnvironment) String() string            { return proto.CompactTextString(m) }
func (*VesselToEnvironment) ProtoMessage()               {}
func (*VesselToEnvironment) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *VesselToEnvironment) GetJoinRequest() *JoinRequest {
	if m != nil {
		return m.JoinRequest
	}
	return nil
}

func init() {
	proto.RegisterType((*JoinRequest)(nil), "protobuf.JoinRequest")
	proto.RegisterType((*VesselToEnvironment)(nil), "protobuf.vesselToEnvironment")
}

var fileDescriptor1 = []byte{
	// 145 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0x2c, 0x4b, 0x2d, 0x2e,
	0x4e, 0xcd, 0x09, 0xc9, 0x77, 0xcd, 0x2b, 0xcb, 0x2c, 0xca, 0xcf, 0xcb, 0x4d, 0xcd, 0x2b, 0xd1,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0x49, 0xa5, 0x69, 0x4a, 0x9a, 0x5c, 0xdc,
	0x5e, 0xf9, 0x99, 0x79, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x52, 0x5c, 0x1c, 0x10,
	0x5d, 0x9e, 0x2e, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x70, 0xbe, 0x52, 0x05, 0x97, 0x30,
	0x16, 0x13, 0x85, 0x34, 0xb8, 0xf8, 0xc1, 0xa6, 0x25, 0xe7, 0xe7, 0x84, 0xa5, 0x16, 0x15, 0x67,
	0xe6, 0xe7, 0x41, 0x75, 0xa2, 0x0b, 0x0b, 0x99, 0x73, 0x71, 0x67, 0x21, 0xec, 0x92, 0x60, 0x02,
	0xaa, 0xe2, 0x36, 0x12, 0xd5, 0x83, 0xb9, 0x45, 0x0f, 0xc9, 0x21, 0x41, 0xc8, 0x2a, 0x93, 0xd8,
	0xc0, 0x4a, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x38, 0x00, 0x86, 0x35, 0xd2, 0x00, 0x00,
	0x00,
}
